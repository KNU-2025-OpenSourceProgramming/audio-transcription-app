name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    
    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask flask-cors flask-sock torch soundfile numpy
        pip install git+https://github.com/openai/whisper.git
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
    
    - name: Install Frontend Dependencies
      run: |
        cd frontend/audio-client
        npm install
    
    - name: Build Frontend
      run: |
        cd frontend/audio-client
        npm run build
        mkdir -p ../../backend/www
        cp -r build/* ../../backend/www/
    
    - name: Install ngrok
      run: |
        wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
        tar xvzf ngrok-v3-stable-linux-amd64.tgz
        chmod +x ngrok
    
    - name: Run Application and Open ngrok Tunnel
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        ./ngrok config add-authtoken $NGROK_AUTH_TOKEN
        cd backend
        python app.py &
        sleep 5
        ../ngrok http 3000 --log=stdout > ngrok.log &
        sleep 5
        NGROK_URL=$(grep -o 'https://.*\.ngrok-free\.app' ngrok.log | head -n 1)
        echo "Application will be accessible at the following URL for 5 minutes: $NGROK_URL"
        echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV
    
    - name: Display Test URL
      run: |
        echo "Application URL: ${{ env.NGROK_URL }}"
        echo "URL will expire in 5 minutes. Please proceed with testing quickly."
        sleep 300 